apiVersion: apps/v1
kind: Deployment
metadata:
  name: customer-deploy
  namespace: wsc2024
spec:
  replicas: 2
  selector:
    matchLabels:
      app: customer
  template:
    metadata:
      labels:
        app: customer
    spec:
      tolerations:
        - key: dedicated
          value: "app"
          effect: NoSchedule
          operator: Equal
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: app
                    operator: In
                    values:
                      - db
      containers:
        - name: app
          image: 658986583341.dkr.ecr.ap-northeast-2.amazonaws.com/customer-repo
          ports:
            - containerPort: 8080
          env:
            - name: MYSQL_USER
              value: admin
            - name: MYSQL_PASSWORD
              value: Skill53##
            - name: MYSQL_HOST
              value: wsc2024-db-cluster.cluster-cukiuqrdabzk.ap-northeast-2.rds.amazonaws.com
            - name: MYSQL_PORT
              value: "3306"
            - name: MYSQL_DBNAME
              value: wsc2024_db
---
apiVersion: v1
kind: Service
metadata:
  name: customer
  namespace: wsc2024
spec:
  selector:
    app: customer
  ports:
    - port: 8080
      targetPort: 8080
---
apiVersion: application-networking.k8s.aws/v1alpha1
kind: TargetGroupPolicy
metadata:
  name: customer
  namespace: wsc2024
spec:
  targetRef:
    group: ""
    kind: Service
    name: customer
  protocol: HTTP
  protocolVersion: HTTP1
  healthCheck:
    enabled: true
    intervalSeconds: 5
    timeoutSeconds: 2
    healthyThresholdCount: 2
    unhealthyThresholdCount: 2
    path: "/healthcheck"
    port: 8080
    protocol: HTTP
    protocolVersion: HTTP1
    statusMatch: "200"