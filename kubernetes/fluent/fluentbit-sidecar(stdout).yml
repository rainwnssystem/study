apiVersion: apps/v1
kind: Deployment
metadata:
  name: product
  namespace: wsi
spec:
  replicas: 2
  selector:
    matchLabels:
      app: product
  template:
    metadata:
      labels:
        app: product
    spec:
      tolerations:
        - key: dedicated
          value: "app"
          effect: NoSchedule
          operator: Equal
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: dedicated
                    operator: In
                    values:
                      - app
      containers:
        - name: app
          image: 658986583341.dkr.ecr.ap-northeast-2.amazonaws.com/product-ecr:latest
          ports:
            - containerPort: 8080
          env:
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: product
                  key: MYSQL_USER
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: product
                  key: MYSQL_PASSWORD
            - name: MYSQL_HOST
              valueFrom:
                secretKeyRef:
                  name: product
                  key: MYSQL_HOST
            - name: MYSQL_PORT
              valueFrom:
                secretKeyRef:
                  name: product
                  key: MYSQL_PORT
            - name: MYSQL_DBNAME
              valueFrom:
                secretKeyRef:
                  name: product
                  key: MYSQL_DBNAME
        - name: fluentbit
          image: public.ecr.aws/aws-observability/aws-for-fluent-bit:stable
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          volumeMounts:
            - name: logs
              readOnly: true
              mountPath: /var/log/pods
            - name: fluent-bit-config
              mountPath: /fluent-bit/etc
      volumes:
        - name: logs
          hostPath:
            path: /var/log/pods
        - name: fluent-bit-config
          configMap:
            name: fluentbit-config
---
apiVersion: v1
kind: Service
metadata:
  name: product-service
  namespace: wsi
spec:
  selector:
    app: product
  ports:
    - port: 8080
      targetPort: 8080
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: fluentbit-config
  namespace: wsi
data:
  fluent-bit.conf: |
    [SERVICE]
        Flush        1
        Daemon       Off
        Log_Level    info
        Parsers_File parsers.conf

    [INPUT]
        Name        tail
        Path        /var/log/pods/*product*/app/0.log
        Parser      docker
        Tag         product

    [OUTPUT]
        Name  stdout
        Match *

    [OUTPUT]
        Name cloudwatch_logs
        Match   product
        region ap-northeast-2
        log_group_name /wsi/webapp/product
        log_stream_prefix log-${POD_NAME}  # Downward API 환경변수 사용
        # log_stream_name log  # log_stream_prefix 대신 쓸 수 있음
        auto_create_group On
  parsers.conf: |
    [PARSER]
        Name docker
        Format json
        Time_Key time
        Time_Format %Y-%m-%dT%H:%M:%S.%L
        Time_Keep On
        Decode_Field_As escaped_utf8 log